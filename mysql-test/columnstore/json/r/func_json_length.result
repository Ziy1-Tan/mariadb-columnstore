DROP DATABASE IF EXISTS json_length_db;
CREATE DATABASE json_length_db;
USE json_length_db;
# ----------------------------------------------------------------------
# Test of JSON_LENGTH function.
# ----------------------------------------------------------------------
CREATE TABLE t1(l LONGTEXT) ENGINE = columnstore;
INSERT INTO t1 VALUES();
# Valid JSON text without path arg
INSERT INTO t1 VALUES(1);
INSERT INTO t1 VALUES('"abc"');
INSERT INTO t1 VALUES('[]');
INSERT INTO t1 VALUES('[1, 2, 3]');
INSERT INTO t1 VALUES('[1, [2, 3, 4], 5]');
INSERT INTO t1 VALUES('[1, [2, 3, 4], {"k1": "v1"}]');
INSERT INTO t1 VALUES('{}');
INSERT INTO t1 VALUES('{"k1": "v1", "k2": "[1, 2, 3]"}');
INSERT INTO t1 VALUES('{"k1": "v1", "k2": {"k3": "v3"}}');
SELECT JSON_LENGTH(l) from t1;
JSON_LENGTH(l)
NULL
1
1
0
3
3
3
0
2
2
# Valid path
TRUNCATE t1;
INSERT INTO t1 VALUES('[ 1, [ 2, 3, [4, 5, 6] ], {"a": 7," b1": [3, 4, 6]}, 9 ]');
SELECT JSON_LENGTH(l, '$[0]') from t1;
JSON_LENGTH(l, '$[0]')
1
SELECT JSON_LENGTH(l, '$[1]') from t1;
JSON_LENGTH(l, '$[1]')
3
SELECT JSON_LENGTH(l, '$[3][0]') from t1;
JSON_LENGTH(l, '$[3][0]')
1
SELECT JSON_LENGTH(l, '$[1][2]') from t1;
JSON_LENGTH(l, '$[1][2]')
3
SELECT JSON_LENGTH(l, '$[2][0]') from t1;
JSON_LENGTH(l, '$[2][0]')
2
SELECT JSON_LENGTH(l, '$[2].b1') from t1;
JSON_LENGTH(l, '$[2].b1')
NULL
# Non-existent path
SELECT JSON_LENGTH(l, '$[4]') from t1;
JSON_LENGTH(l, '$[4]')
NULL
SELECT JSON_LENGTH(l, '$[2][2]') from t1;
JSON_LENGTH(l, '$[2][2]')
NULL
SELECT JSON_LENGTH(l, '$[1][3]') from t1;
JSON_LENGTH(l, '$[1][3]')
NULL
DROP TABLE t1;
DROP DATABASE json_length_db;
